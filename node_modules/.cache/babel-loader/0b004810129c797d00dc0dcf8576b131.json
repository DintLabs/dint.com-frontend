{"ast":null,"code":"var _jsxFileName = \"/Users/maxp/Documents/GitHub/dint_marketplace/src/frontend/components/EventForAll.js\",\n    _s = $RefreshSig$();\n\nimport NavbarHome from './NavbarHome';\nimport { Card, Button, Row, Col, Container } from 'react-bootstrap';\nimport { get, getDatabase, ref, child } from \"firebase/database\";\nimport { auth, db } from \"./Firebase\";\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from './Footer';\nimport polygonlogo from \"../material/polygon_logo.svg\";\nimport solanalogo from \"../material/solana_logo.svg\";\nimport dint from \"../material/dintcoin_logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DisplaynetworkLogo = props => {\n  if (props.networkName == \"Polygon\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: polygonlogo,\n        alt: \"\",\n        height: \"17px\",\n        style: {\n          marginBottom: \"2px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (props.networkName == \"Solana\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: solanalogo,\n        alt: \"\",\n        height: \"17px\",\n        style: {\n          marginBottom: \"2px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_c = DisplaynetworkLogo;\n\nconst DisplaycryptoLogo = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: dint,\n      alt: \"\",\n      height: \"22px\",\n      style: {\n        marginBottom: \"2px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = DisplaycryptoLogo;\n\nconst EventForAll = props => {\n  _s();\n\n  const [eventsdata, setEventdata] = useState([]);\n\n  const getEventsfirebase = () => {\n    const dbRef = ref(getDatabase());\n    get(child(dbRef, `events/`)).then(snapshot => {\n      if (snapshot.exists()) {\n        var events = Object.keys(snapshot.val());\n        var eventarray = [];\n\n        for (var i = 0; i < events.length; i++) {\n          eventarray.push(snapshot.val()[events[i]]);\n        }\n\n        setEventdata(eventarray);\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    getEventsfirebase();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarHome, {\n      iseventpage: true,\n      isloggedin: props.islogin,\n      logout: props.logout,\n      isadmin: props.isAdmin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"events\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          xs: 1,\n          md: 3,\n          className: \"g-4\",\n          children: eventsdata.map((ev, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  variant: \"top\",\n                  src: ev.eventPhoto,\n                  style: {\n                    height: '200px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: ev.eventName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: ev.eventDescription\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [\"Date: \", ev.eventDate, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [\"Start Time: \", ev.eventStartTime, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [\"End Time:  \", ev.eventEndTime, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [\"Venue: \", ev.venueName, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [\"Network: \", ev.network, \"\\xA0 \", /*#__PURE__*/_jsxDEV(DisplaynetworkLogo, {\n                      networkName: ev.network\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 77\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [\"Tokens Required: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: [\" \", ev.balanceRequired, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 66\n                    }, this), \" \", ev.tokenName, \" \", /*#__PURE__*/_jsxDEV(DisplaycryptoLogo, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 111\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/login/events\",\n                    children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                      children: \"Get Tickets\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 71\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this)\n          }, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EventForAll, \"hD9HKDuMNIA9UFstF8ZBol4q200=\");\n\n_c3 = EventForAll;\nexport default EventForAll;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DisplaynetworkLogo\");\n$RefreshReg$(_c2, \"DisplaycryptoLogo\");\n$RefreshReg$(_c3, \"EventForAll\");","map":{"version":3,"sources":["/Users/maxp/Documents/GitHub/dint_marketplace/src/frontend/components/EventForAll.js"],"names":["NavbarHome","Card","Button","Row","Col","Container","get","getDatabase","ref","child","auth","db","useState","useEffect","Link","Footer","polygonlogo","solanalogo","dint","DisplaynetworkLogo","props","networkName","marginBottom","DisplaycryptoLogo","EventForAll","eventsdata","setEventdata","getEventsfirebase","dbRef","then","snapshot","exists","events","Object","keys","val","eventarray","i","length","push","console","log","catch","error","islogin","logout","isAdmin","map","ev","index","eventPhoto","height","eventName","eventDescription","eventDate","eventStartTime","eventEndTime","venueName","network","balanceRequired","tokenName"],"mappings":"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","sourcesContent":["import NavbarHome from './NavbarHome'\nimport { Card, Button, Row, Col, Container } from 'react-bootstrap';\nimport { get, getDatabase, ref, child } from \"firebase/database\";\nimport { auth, db } from \"./Firebase\";\nimport { useState, useEffect, } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from './Footer'\nimport polygonlogo from \"../material/polygon_logo.svg\"\nimport solanalogo from \"../material/solana_logo.svg\"\nimport dint from \"../material/dintcoin_logo.png\"\n\n\nconst DisplaynetworkLogo =(props) =>{\n    if(props.networkName == \"Polygon\")\n    {\n        return(<>\n            <img src={polygonlogo} alt=\"\" height={\"17px\"} style={{marginBottom:\"2px\"}} />\n        </>)\n    }\n    else if(props.networkName == \"Solana\")\n    {\n        return(<>\n            <img src={solanalogo} alt=\"\" height={\"17px\"} style={{marginBottom:\"2px\"}} />\n        </>)\n    }else{\n        return(<>\n        <p>token</p>\n        </>)\n    }\n}\n\n\nconst DisplaycryptoLogo =(props) =>{\n    return(<>\n     <img src={dint} alt=\"\" height={\"22px\"} style={{marginBottom:\"2px\"}} />\n    </>)\n}\n\n\nconst EventForAll = (props) =>{\n\n    const [eventsdata, setEventdata] = useState([])\n\n    const getEventsfirebase = () => {\n        const dbRef = ref(getDatabase());\n        get(child(dbRef, `events/`)).then((snapshot) => {\n            if (snapshot.exists()) {\n                var events = Object.keys(snapshot.val())\n                var eventarray = [];\n                for (var i = 0; i < events.length; i++) {\n                    eventarray.push(snapshot.val()[events[i]])\n                }\n                setEventdata(eventarray)\n            } else {\n                console.log(\"No data available\");\n            }\n        }).catch((error) => {\n            console.error(error);\n        });\n    }\n\n    useEffect(() => {\n        getEventsfirebase()\n    }, [])\n\n    return(\n        <>\n        <NavbarHome iseventpage={true} isloggedin={props.islogin} logout={props.logout} isadmin={props.isAdmin} />\n        <div id=\"events\">\n                <br /><br />\n                <br /><br />\n                <div className=\"header\">\n                        <h1>Login</h1>\n                      \n                    </div>\n                \n                <Container>\n                    <Row xs={1} md={3} className=\"g-4\">\n                        {eventsdata.map((ev, index) => (\n                            <>\n                                <Col>\n                                    <Card>\n                                        <Card.Img variant=\"top\" src={ev.eventPhoto} style={{ height: '200px' }} />\n                                        <Card.Body>\n                                            <Card.Title><b>{ev.eventName}</b></Card.Title>\n                                            <Card.Text>\n                                                {ev.eventDescription}\n                                            </Card.Text>\n                                            <hr></hr>\n                                            <h6>Date: {ev.eventDate} </h6>\n                                            <h6>Start Time: {ev.eventStartTime} </h6>\n                                            <h6>End Time:  {ev.eventEndTime} </h6>\n                                            <h6>Venue: {ev.venueName} </h6>\n                                            <h6>Network: {ev.network}&nbsp; <DisplaynetworkLogo networkName={ev.network}/> </h6>\n                                            <h6>Tokens Required: <b> {ev.balanceRequired} </b> {ev.tokenName} <DisplaycryptoLogo /> </h6>\n                                            <br />\n\n                                            <Link to=\"/login/events\"> <Button>Get Tickets</Button> </Link>\n\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            </>\n                        ))\n                        }\n                    </Row>\n                </Container>\n            </div>\n            <Footer />\n        </>\n    )\n}\nexport default EventForAll;"]},"metadata":{},"sourceType":"module"}