{"ast":null,"code":"var _jsxFileName = \"/Users/maxp/Documents/GitHub/dint_marketplace/src/frontend/components/Events.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport Footer from './Footer';\nimport \"../material/Event.css\";\nimport NavbarHome from './NavbarHome';\nimport { useNavigate } from 'react-router-dom';\nimport { get, getDatabase, ref, child } from \"firebase/database\";\nimport { auth, db } from \"./Firebase\";\nimport { useState, useEffect } from 'react';\nimport { Card, Button, Row, Col, Container } from 'react-bootstrap';\nimport { ethers } from \"ethers\";\nimport polygonlogo from \"../material/polygon_logo.svg\";\nimport solanalogo from \"../material/solana_logo.svg\";\nimport dint from \"../material/dintcoin_logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Swal = require('sweetalert2');\n\nconst ShowTicketBtn = props => {\n  _s();\n\n  let navigate = useNavigate();\n\n  if (parseFloat(props.balance) > parseFloat(props.required)) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => navigate('/ticketcreate', {\n          state: {\n            eventid: props.detail.eventId,\n            userid: auth.currentUser.uid\n          }\n        }),\n        children: \"Get Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => alert('Buy Clicked'),\n        children: \"Buy Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(ShowTicketBtn, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ShowTicketBtn;\n\nconst DisplaynetworkLogo = props => {\n  if (props.networkName == \"Polygon\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: polygonlogo,\n        alt: \"\",\n        height: \"17px\",\n        style: {\n          marginBottom: \"2px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (props.networkName == \"Solana\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: solanalogo,\n        alt: \"\",\n        height: \"17px\",\n        style: {\n          marginBottom: \"2px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_c2 = DisplaynetworkLogo;\n\nconst DisplaycryptoLogo = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: dint,\n      alt: \"\",\n      height: \"22px\",\n      style: {\n        marginBottom: \"2px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c3 = DisplaycryptoLogo;\n\nconst Events = props => {\n  _s2();\n\n  let navigate = useNavigate();\n  const [eventsdata, setEventdata] = useState([]);\n  const [userBalanceEvent, setUserBalanceEvent] = useState('wallet not connected');\n  const [tokenNameEvent, setTokenNameEvent] = useState('wallet not connected');\n  const [networkid, setnetworkid] = useState('wallet not connected');\n  const abicode = [{\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"string\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"name\": \"_spender\",\n      \"type\": \"address\"\n    }, {\n      \"name\": \"_amount\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"approve\",\n    \"outputs\": [{\n      \"name\": \"success\",\n      \"type\": \"bool\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"creationBlock\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"name\": \"_from\",\n      \"type\": \"address\"\n    }, {\n      \"name\": \"_to\",\n      \"type\": \"address\"\n    }, {\n      \"name\": \"_amount\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"transferFrom\",\n    \"outputs\": [{\n      \"name\": \"success\",\n      \"type\": \"bool\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"uint8\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"name\": \"_newController\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"changeController\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [{\n      \"name\": \"_owner\",\n      \"type\": \"address\"\n    }, {\n      \"name\": \"_blockNumber\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"balanceOfAt\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"version\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"string\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"name\": \"_cloneTokenName\",\n      \"type\": \"string\"\n    }, {\n      \"name\": \"_cloneDecimalUnits\",\n      \"type\": \"uint8\"\n    }, {\n      \"name\": \"_cloneTokenSymbol\",\n      \"type\": \"string\"\n    }, {\n      \"name\": \"_snapshotBlock\",\n      \"type\": \"uint256\"\n    }, {\n      \"name\": \"_transfersEnabled\",\n      \"type\": \"bool\"\n    }],\n    \"name\": \"createCloneToken\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [{\n      \"name\": \"_owner\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"balanceOf\",\n    \"outputs\": [{\n      \"name\": \"balance\",\n      \"type\": \"uint256\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"parentToken\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"name\": \"_owner\",\n      \"type\": \"address\"\n    }, {\n      \"name\": \"_amount\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"generateTokens\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"bool\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"string\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [{\n      \"name\": \"_blockNumber\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"totalSupplyAt\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"name\": \"_to\",\n      \"type\": \"address\"\n    }, {\n      \"name\": \"_amount\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"transfer\",\n    \"outputs\": [{\n      \"name\": \"success\",\n      \"type\": \"bool\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"transfersEnabled\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"bool\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"parentSnapShotBlock\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"name\": \"_spender\",\n      \"type\": \"address\"\n    }, {\n      \"name\": \"_amount\",\n      \"type\": \"uint256\"\n    }, {\n      \"name\": \"_extraData\",\n      \"type\": \"bytes\"\n    }],\n    \"name\": \"approveAndCall\",\n    \"outputs\": [{\n      \"name\": \"success\",\n      \"type\": \"bool\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"name\": \"_owner\",\n      \"type\": \"address\"\n    }, {\n      \"name\": \"_amount\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"destroyTokens\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"bool\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [{\n      \"name\": \"_owner\",\n      \"type\": \"address\"\n    }, {\n      \"name\": \"_spender\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"allowance\",\n    \"outputs\": [{\n      \"name\": \"remaining\",\n      \"type\": \"uint256\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"name\": \"_token\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"claimTokens\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"tokenFactory\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"name\": \"_transfersEnabled\",\n      \"type\": \"bool\"\n    }],\n    \"name\": \"enableTransfers\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"controller\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"name\": \"_tokenFactory\",\n      \"type\": \"address\"\n    }, {\n      \"name\": \"_parentToken\",\n      \"type\": \"address\"\n    }, {\n      \"name\": \"_parentSnapShotBlock\",\n      \"type\": \"uint256\"\n    }, {\n      \"name\": \"_tokenName\",\n      \"type\": \"string\"\n    }, {\n      \"name\": \"_decimalUnits\",\n      \"type\": \"uint8\"\n    }, {\n      \"name\": \"_tokenSymbol\",\n      \"type\": \"string\"\n    }, {\n      \"name\": \"_transfersEnabled\",\n      \"type\": \"bool\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  }, {\n    \"payable\": true,\n    \"stateMutability\": \"payable\",\n    \"type\": \"fallback\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"name\": \"_token\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": true,\n      \"name\": \"_controller\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": false,\n      \"name\": \"_amount\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"ClaimedTokens\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"name\": \"_from\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": true,\n      \"name\": \"_to\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": false,\n      \"name\": \"_amount\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"name\": \"_cloneToken\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": false,\n      \"name\": \"_snapshotBlock\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"NewCloneToken\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"name\": \"_owner\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": true,\n      \"name\": \"_spender\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": false,\n      \"name\": \"_amount\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  }];\n\n  const getEventsfirebase = () => {\n    const dbRef = ref(getDatabase());\n    get(child(dbRef, `events/`)).then(snapshot => {\n      if (snapshot.exists()) {\n        var events = Object.keys(snapshot.val());\n        var eventarray = [];\n\n        for (var i = 0; i < events.length; i++) {\n          eventarray.push(snapshot.val()[events[i]]);\n        }\n\n        setEventdata(eventarray);\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  window.ethereum.on('chainChanged', async function (chainId) {\n    getmetamaskBalance();\n  });\n\n  const getmetamaskBalance = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n\n      if (accounts[0]) {\n        // const provider = new ethers.providers.JsonRpcProvider('https://polygon-rpc.com/')\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n        if (provider.provider.chainId == \"0x13881\") {\n          setnetworkid(\"Polygon Test\");\n        } else if (provider.provider.chainId == \"0x89\") {\n          setnetworkid('Polygon');\n        } else {\n          setnetworkid('polygon not connected');\n        }\n\n        const contract = new ethers.Contract(\"0x40763df31955cb3bad544cbed3e1953a9b063311\", abicode, provider);\n\n        try {\n          const balanceInEth = await contract.balanceOf(accounts[0]);\n          console.log(balanceInEth);\n          const tokenname = await contract.name();\n          setTokenNameEvent(tokenname);\n          setUserBalanceEvent(parseFloat(ethers.utils.formatEther(balanceInEth)).toFixed(6));\n          window.isWallet = true;\n        } catch (e) {\n          setTokenNameEvent('polygon Main not connected');\n          setUserBalanceEvent('polygon Main not connected');\n        }\n      }\n    } else {\n      Swal.fire({\n        title: 'It will required a web3 wallet to use this area of our application',\n        text: \"Click Here to Install \",\n        html: '<a href=\"https://metamask.io\" target=\"_blank\">Click here to install</a>',\n        icon: 'error',\n        showCancelButton: true,\n        cancelButtonColor: '#CBC9C9',\n        cancelButtonText: 'Back'\n      }).then(result => {\n        if (result.isConfirmed) {} else {\n          navigate('/', {\n            replace: true\n          });\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    getmetamaskBalance();\n    getEventsfirebase();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarHome, {\n      isloggedin: props.islogin,\n      logout: props.logout,\n      isadmin: props.isAdmin,\n      iseventpage: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"events\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Network : \", networkid]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Token Name : \", tokenNameEvent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Wallet Balance : \", userBalanceEvent, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: dint,\n            alt: \"\",\n            height: \"22px\",\n            style: {\n              marginBottom: \"2px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 65\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          xs: 1,\n          md: 3,\n          className: \"g-4\",\n          children: eventsdata.map((ev, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  variant: \"top\",\n                  src: ev.eventPhoto,\n                  style: {\n                    height: '200px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: ev.eventName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: ev.eventDescription\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [\"Date  : \", ev.eventDate, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [\"Start Time  : \", ev.eventStartTime, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [\"End Time    :  \", ev.eventEndTime, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [\"Vanue : \", ev.venueName, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [\"Network : \", /*#__PURE__*/_jsxDEV(DisplaynetworkLogo, {\n                      networkName: ev.network\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 59\n                    }, this), \"  \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [\"Required Balance: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: [ev.balanceRequired, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 67\n                    }, this), \" \", ev.tokenName, \" \", /*#__PURE__*/_jsxDEV(DisplaycryptoLogo, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 111\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(ShowTicketBtn, {\n                    balance: userBalanceEvent,\n                    required: ev.balanceRequired,\n                    detail: ev\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)\n          }, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Events, \"ci3Hzs0dcY774RJL0FWImx7EMMQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c4 = Events;\nexport default Events;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ShowTicketBtn\");\n$RefreshReg$(_c2, \"DisplaynetworkLogo\");\n$RefreshReg$(_c3, \"DisplaycryptoLogo\");\n$RefreshReg$(_c4, \"Events\");","map":{"version":3,"sources":["/Users/maxp/Documents/GitHub/dint_marketplace/src/frontend/components/Events.js"],"names":["Footer","NavbarHome","useNavigate","get","getDatabase","ref","child","auth","db","useState","useEffect","Card","Button","Row","Col","Container","ethers","polygonlogo","solanalogo","dint","Swal","require","ShowTicketBtn","props","navigate","parseFloat","balance","required","state","eventid","detail","eventId","userid","currentUser","uid","alert","DisplaynetworkLogo","networkName","marginBottom","DisplaycryptoLogo","Events","eventsdata","setEventdata","userBalanceEvent","setUserBalanceEvent","tokenNameEvent","setTokenNameEvent","networkid","setnetworkid","abicode","getEventsfirebase","dbRef","then","snapshot","exists","events","Object","keys","val","eventarray","i","length","push","console","log","catch","error","window","ethereum","on","chainId","getmetamaskBalance","accounts","request","method","provider","providers","Web3Provider","contract","Contract","balanceInEth","balanceOf","tokenname","name","utils","formatEther","toFixed","isWallet","e","fire","title","text","html","icon","showCancelButton","cancelButtonColor","cancelButtonText","result","isConfirmed","replace","islogin","logout","isAdmin","map","ev","index","eventPhoto","height","eventName","eventDescription","eventDate","eventStartTime","eventEndTime","venueName","network","balanceRequired","tokenName"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAO,uBAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,GAAT,EAAcC,WAAd,EAA2BC,GAA3B,EAAgCC,KAAhC,QAA6C,mBAA7C;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,YAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,SAAjC,QAAkD,iBAAlD;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;;;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,aAAD,CAApB;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,MAAIC,QAAQ,GAAGtB,WAAW,EAA1B;;AACA,MAAIuB,UAAU,CAACF,KAAK,CAACG,OAAP,CAAV,GAA4BD,UAAU,CAACF,KAAK,CAACI,QAAP,CAA1C,EAA4D;AACxD,wBACI;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAE,MAAMH,QAAQ,CAAC,eAAD,EAAkB;AAAEI,UAAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAEN,KAAK,CAACO,MAAN,CAAaC,OAAxB;AAAiCC,YAAAA,MAAM,EAAEzB,IAAI,CAAC0B,WAAL,CAAiBC;AAA1D;AAAT,SAAlB,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAIH,GALD,MAMK;AACD,wBACI;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAE,MAAMC,KAAK,CAAC,aAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAIH;AACJ,CAdD;;GAAMb,a;UACapB,W;;;KADboB,a;;AAgBN,MAAMc,kBAAkB,GAAIb,KAAD,IAAW;AAClC,MAAIA,KAAK,CAACc,WAAN,IAAqB,SAAzB,EAAoC;AAChC,wBAAQ;AAAA,6BACJ;AAAK,QAAA,GAAG,EAAEpB,WAAV;AAAuB,QAAA,GAAG,EAAC,EAA3B;AAA8B,QAAA,MAAM,EAAE,MAAtC;AAA8C,QAAA,KAAK,EAAE;AAAEqB,UAAAA,YAAY,EAAE;AAAhB;AAArD;AAAA;AAAA;AAAA;AAAA;AADI,qBAAR;AAGH,GAJD,MAKK,IAAIf,KAAK,CAACc,WAAN,IAAqB,QAAzB,EAAmC;AACpC,wBAAQ;AAAA,6BACJ;AAAK,QAAA,GAAG,EAAEnB,UAAV;AAAsB,QAAA,GAAG,EAAC,EAA1B;AAA6B,QAAA,MAAM,EAAE,MAArC;AAA6C,QAAA,KAAK,EAAE;AAAEoB,UAAAA,YAAY,EAAE;AAAhB;AAApD;AAAA;AAAA;AAAA;AAAA;AADI,qBAAR;AAGH,GAJI,MAIE;AACH,wBAAQ;AAAA,6BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADI,qBAAR;AAGH;AACJ,CAfD;;MAAMF,kB;;AAiBN,MAAMG,iBAAiB,GAAIhB,KAAD,IAAW;AACjC,sBAAQ;AAAA,2BACJ;AAAK,MAAA,GAAG,EAAEJ,IAAV;AAAgB,MAAA,GAAG,EAAC,EAApB;AAAuB,MAAA,MAAM,EAAE,MAA/B;AAAuC,MAAA,KAAK,EAAE;AAAEmB,QAAAA,YAAY,EAAE;AAAhB;AAA9C;AAAA;AAAA;AAAA;AAAA;AADI,mBAAR;AAGH,CAJD;;MAAMC,iB;;AAQN,MAAMC,MAAM,GAAIjB,KAAD,IAAW;AAAA;;AACtB,MAAIC,QAAQ,GAAGtB,WAAW,EAA1B;AAEA,QAAM,CAACuC,UAAD,EAAaC,YAAb,IAA6BjC,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACkC,gBAAD,EAAmBC,mBAAnB,IAA0CnC,QAAQ,CAAC,sBAAD,CAAxD;AACA,QAAM,CAACoC,cAAD,EAAiBC,iBAAjB,IAAsCrC,QAAQ,CAAC,sBAAD,CAApD;AACA,QAAM,CAACsC,SAAD,EAAYC,YAAZ,IAA4BvC,QAAQ,CAAC,sBAAD,CAA1C;AAGA,QAAMwC,OAAO,GAAG,CAAC;AAAE,gBAAY,IAAd;AAAoB,cAAU,EAA9B;AAAkC,YAAQ,MAA1C;AAAkD,eAAW,CAAC;AAAE,cAAQ,EAAV;AAAc,cAAQ;AAAtB,KAAD,CAA7D;AAAiG,eAAW,KAA5G;AAAmH,uBAAmB,MAAtI;AAA8I,YAAQ;AAAtJ,GAAD,EAAqK;AAAE,gBAAY,KAAd;AAAqB,cAAU,CAAC;AAAE,cAAQ,UAAV;AAAsB,cAAQ;AAA9B,KAAD,EAA4C;AAAE,cAAQ,SAAV;AAAqB,cAAQ;AAA7B,KAA5C,CAA/B;AAAsH,YAAQ,SAA9H;AAAyI,eAAW,CAAC;AAAE,cAAQ,SAAV;AAAqB,cAAQ;AAA7B,KAAD,CAApJ;AAA6L,eAAW,KAAxM;AAA+M,uBAAmB,YAAlO;AAAgP,YAAQ;AAAxP,GAArK,EAA2a;AAAE,gBAAY,IAAd;AAAoB,cAAU,EAA9B;AAAkC,YAAQ,eAA1C;AAA2D,eAAW,CAAC;AAAE,cAAQ,EAAV;AAAc,cAAQ;AAAtB,KAAD,CAAtE;AAA2G,eAAW,KAAtH;AAA6H,uBAAmB,MAAhJ;AAAwJ,YAAQ;AAAhK,GAA3a,EAAylB;AAAE,gBAAY,IAAd;AAAoB,cAAU,EAA9B;AAAkC,YAAQ,aAA1C;AAAyD,eAAW,CAAC;AAAE,cAAQ,EAAV;AAAc,cAAQ;AAAtB,KAAD,CAApE;AAAyG,eAAW,KAApH;AAA2H,uBAAmB,MAA9I;AAAsJ,YAAQ;AAA9J,GAAzlB,EAAqwB;AAAE,gBAAY,KAAd;AAAqB,cAAU,CAAC;AAAE,cAAQ,OAAV;AAAmB,cAAQ;AAA3B,KAAD,EAAyC;AAAE,cAAQ,KAAV;AAAiB,cAAQ;AAAzB,KAAzC,EAA+E;AAAE,cAAQ,SAAV;AAAqB,cAAQ;AAA7B,KAA/E,CAA/B;AAAyJ,YAAQ,cAAjK;AAAiL,eAAW,CAAC;AAAE,cAAQ,SAAV;AAAqB,cAAQ;AAA7B,KAAD,CAA5L;AAAqO,eAAW,KAAhP;AAAuP,uBAAmB,YAA1Q;AAAwR,YAAQ;AAAhS,GAArwB,EAAmjC;AAAE,gBAAY,IAAd;AAAoB,cAAU,EAA9B;AAAkC,YAAQ,UAA1C;AAAsD,eAAW,CAAC;AAAE,cAAQ,EAAV;AAAc,cAAQ;AAAtB,KAAD,CAAjE;AAAoG,eAAW,KAA/G;AAAsH,uBAAmB,MAAzI;AAAiJ,YAAQ;AAAzJ,GAAnjC,EAA0tC;AAAE,gBAAY,KAAd;AAAqB,cAAU,CAAC;AAAE,cAAQ,gBAAV;AAA4B,cAAQ;AAApC,KAAD,CAA/B;AAAkF,YAAQ,kBAA1F;AAA8G,eAAW,EAAzH;AAA6H,eAAW,KAAxI;AAA+I,uBAAmB,YAAlK;AAAgL,YAAQ;AAAxL,GAA1tC,EAAg6C;AAAE,gBAAY,IAAd;AAAoB,cAAU,CAAC;AAAE,cAAQ,QAAV;AAAoB,cAAQ;AAA5B,KAAD,EAA0C;AAAE,cAAQ,cAAV;AAA0B,cAAQ;AAAlC,KAA1C,CAA9B;AAAwH,YAAQ,aAAhI;AAA+I,eAAW,CAAC;AAAE,cAAQ,EAAV;AAAc,cAAQ;AAAtB,KAAD,CAA1J;AAA+L,eAAW,KAA1M;AAAiN,uBAAmB,MAApO;AAA4O,YAAQ;AAApP,GAAh6C,EAAkqD;AAAE,gBAAY,IAAd;AAAoB,cAAU,EAA9B;AAAkC,YAAQ,SAA1C;AAAqD,eAAW,CAAC;AAAE,cAAQ,EAAV;AAAc,cAAQ;AAAtB,KAAD,CAAhE;AAAoG,eAAW,KAA/G;AAAsH,uBAAmB,MAAzI;AAAiJ,YAAQ;AAAzJ,GAAlqD,EAAy0D;AAAE,gBAAY,KAAd;AAAqB,cAAU,CAAC;AAAE,cAAQ,iBAAV;AAA6B,cAAQ;AAArC,KAAD,EAAkD;AAAE,cAAQ,oBAAV;AAAgC,cAAQ;AAAxC,KAAlD,EAAqG;AAAE,cAAQ,mBAAV;AAA+B,cAAQ;AAAvC,KAArG,EAAwJ;AAAE,cAAQ,gBAAV;AAA4B,cAAQ;AAApC,KAAxJ,EAAyM;AAAE,cAAQ,mBAAV;AAA+B,cAAQ;AAAvC,KAAzM,CAA/B;AAA0R,YAAQ,kBAAlS;AAAsT,eAAW,CAAC;AAAE,cAAQ,EAAV;AAAc,cAAQ;AAAtB,KAAD,CAAjU;AAAsW,eAAW,KAAjX;AAAwX,uBAAmB,YAA3Y;AAAyZ,YAAQ;AAAja,GAAz0D,EAAwvE;AAAE,gBAAY,IAAd;AAAoB,cAAU,CAAC;AAAE,cAAQ,QAAV;AAAoB,cAAQ;AAA5B,KAAD,CAA9B;AAAyE,YAAQ,WAAjF;AAA8F,eAAW,CAAC;AAAE,cAAQ,SAAV;AAAqB,cAAQ;AAA7B,KAAD,CAAzG;AAAqJ,eAAW,KAAhK;AAAuK,uBAAmB,MAA1L;AAAkM,YAAQ;AAA1M,GAAxvE,EAAg9E;AAAE,gBAAY,IAAd;AAAoB,cAAU,EAA9B;AAAkC,YAAQ,aAA1C;AAAyD,eAAW,CAAC;AAAE,cAAQ,EAAV;AAAc,cAAQ;AAAtB,KAAD,CAApE;AAAyG,eAAW,KAApH;AAA2H,uBAAmB,MAA9I;AAAsJ,YAAQ;AAA9J,GAAh9E,EAA4nF;AAAE,gBAAY,KAAd;AAAqB,cAAU,CAAC;AAAE,cAAQ,QAAV;AAAoB,cAAQ;AAA5B,KAAD,EAA0C;AAAE,cAAQ,SAAV;AAAqB,cAAQ;AAA7B,KAA1C,CAA/B;AAAoH,YAAQ,gBAA5H;AAA8I,eAAW,CAAC;AAAE,cAAQ,EAAV;AAAc,cAAQ;AAAtB,KAAD,CAAzJ;AAA2L,eAAW,KAAtM;AAA6M,uBAAmB,YAAhO;AAA8O,YAAQ;AAAtP,GAA5nF,EAAg4F;AAAE,gBAAY,IAAd;AAAoB,cAAU,EAA9B;AAAkC,YAAQ,QAA1C;AAAoD,eAAW,CAAC;AAAE,cAAQ,EAAV;AAAc,cAAQ;AAAtB,KAAD,CAA/D;AAAmG,eAAW,KAA9G;AAAqH,uBAAmB,MAAxI;AAAgJ,YAAQ;AAAxJ,GAAh4F,EAAsiG;AAAE,gBAAY,IAAd;AAAoB,cAAU,CAAC;AAAE,cAAQ,cAAV;AAA0B,cAAQ;AAAlC,KAAD,CAA9B;AAA+E,YAAQ,eAAvF;AAAwG,eAAW,CAAC;AAAE,cAAQ,EAAV;AAAc,cAAQ;AAAtB,KAAD,CAAnH;AAAwJ,eAAW,KAAnK;AAA0K,uBAAmB,MAA7L;AAAqM,YAAQ;AAA7M,GAAtiG,EAAiwG;AAAE,gBAAY,KAAd;AAAqB,cAAU,CAAC;AAAE,cAAQ,KAAV;AAAiB,cAAQ;AAAzB,KAAD,EAAuC;AAAE,cAAQ,SAAV;AAAqB,cAAQ;AAA7B,KAAvC,CAA/B;AAAiH,YAAQ,UAAzH;AAAqI,eAAW,CAAC;AAAE,cAAQ,SAAV;AAAqB,cAAQ;AAA7B,KAAD,CAAhJ;AAAyL,eAAW,KAApM;AAA2M,uBAAmB,YAA9N;AAA4O,YAAQ;AAApP,GAAjwG,EAAmgH;AAAE,gBAAY,IAAd;AAAoB,cAAU,EAA9B;AAAkC,YAAQ,kBAA1C;AAA8D,eAAW,CAAC;AAAE,cAAQ,EAAV;AAAc,cAAQ;AAAtB,KAAD,CAAzE;AAA2G,eAAW,KAAtH;AAA6H,uBAAmB,MAAhJ;AAAwJ,YAAQ;AAAhK,GAAngH,EAAirH;AAAE,gBAAY,IAAd;AAAoB,cAAU,EAA9B;AAAkC,YAAQ,qBAA1C;AAAiE,eAAW,CAAC;AAAE,cAAQ,EAAV;AAAc,cAAQ;AAAtB,KAAD,CAA5E;AAAiH,eAAW,KAA5H;AAAmI,uBAAmB,MAAtJ;AAA8J,YAAQ;AAAtK,GAAjrH,EAAq2H;AAAE,gBAAY,KAAd;AAAqB,cAAU,CAAC;AAAE,cAAQ,UAAV;AAAsB,cAAQ;AAA9B,KAAD,EAA4C;AAAE,cAAQ,SAAV;AAAqB,cAAQ;AAA7B,KAA5C,EAAsF;AAAE,cAAQ,YAAV;AAAwB,cAAQ;AAAhC,KAAtF,CAA/B;AAAiK,YAAQ,gBAAzK;AAA2L,eAAW,CAAC;AAAE,cAAQ,SAAV;AAAqB,cAAQ;AAA7B,KAAD,CAAtM;AAA+O,eAAW,KAA1P;AAAiQ,uBAAmB,YAApR;AAAkS,YAAQ;AAA1S,GAAr2H,EAA6pI;AAAE,gBAAY,KAAd;AAAqB,cAAU,CAAC;AAAE,cAAQ,QAAV;AAAoB,cAAQ;AAA5B,KAAD,EAA0C;AAAE,cAAQ,SAAV;AAAqB,cAAQ;AAA7B,KAA1C,CAA/B;AAAoH,YAAQ,eAA5H;AAA6I,eAAW,CAAC;AAAE,cAAQ,EAAV;AAAc,cAAQ;AAAtB,KAAD,CAAxJ;AAA0L,eAAW,KAArM;AAA4M,uBAAmB,YAA/N;AAA6O,YAAQ;AAArP,GAA7pI,EAAg6I;AAAE,gBAAY,IAAd;AAAoB,cAAU,CAAC;AAAE,cAAQ,QAAV;AAAoB,cAAQ;AAA5B,KAAD,EAA0C;AAAE,cAAQ,UAAV;AAAsB,cAAQ;AAA9B,KAA1C,CAA9B;AAAoH,YAAQ,WAA5H;AAAyI,eAAW,CAAC;AAAE,cAAQ,WAAV;AAAuB,cAAQ;AAA/B,KAAD,CAApJ;AAAkM,eAAW,KAA7M;AAAoN,uBAAmB,MAAvO;AAA+O,YAAQ;AAAvP,GAAh6I,EAAqqJ;AAAE,gBAAY,KAAd;AAAqB,cAAU,CAAC;AAAE,cAAQ,QAAV;AAAoB,cAAQ;AAA5B,KAAD,CAA/B;AAA0E,YAAQ,aAAlF;AAAiG,eAAW,EAA5G;AAAgH,eAAW,KAA3H;AAAkI,uBAAmB,YAArJ;AAAmK,YAAQ;AAA3K,GAArqJ,EAA81J;AAAE,gBAAY,IAAd;AAAoB,cAAU,EAA9B;AAAkC,YAAQ,cAA1C;AAA0D,eAAW,CAAC;AAAE,cAAQ,EAAV;AAAc,cAAQ;AAAtB,KAAD,CAArE;AAA0G,eAAW,KAArH;AAA4H,uBAAmB,MAA/I;AAAuJ,YAAQ;AAA/J,GAA91J,EAA2gK;AAAE,gBAAY,KAAd;AAAqB,cAAU,CAAC;AAAE,cAAQ,mBAAV;AAA+B,cAAQ;AAAvC,KAAD,CAA/B;AAAkF,YAAQ,iBAA1F;AAA6G,eAAW,EAAxH;AAA4H,eAAW,KAAvI;AAA8I,uBAAmB,YAAjK;AAA+K,YAAQ;AAAvL,GAA3gK,EAAgtK;AAAE,gBAAY,IAAd;AAAoB,cAAU,EAA9B;AAAkC,YAAQ,YAA1C;AAAwD,eAAW,CAAC;AAAE,cAAQ,EAAV;AAAc,cAAQ;AAAtB,KAAD,CAAnE;AAAwG,eAAW,KAAnH;AAA0H,uBAAmB,MAA7I;AAAqJ,YAAQ;AAA7J,GAAhtK,EAA23K;AAAE,cAAU,CAAC;AAAE,cAAQ,eAAV;AAA2B,cAAQ;AAAnC,KAAD,EAAiD;AAAE,cAAQ,cAAV;AAA0B,cAAQ;AAAlC,KAAjD,EAAgG;AAAE,cAAQ,sBAAV;AAAkC,cAAQ;AAA1C,KAAhG,EAAuJ;AAAE,cAAQ,YAAV;AAAwB,cAAQ;AAAhC,KAAvJ,EAAmM;AAAE,cAAQ,eAAV;AAA2B,cAAQ;AAAnC,KAAnM,EAAiP;AAAE,cAAQ,cAAV;AAA0B,cAAQ;AAAlC,KAAjP,EAA+R;AAAE,cAAQ,mBAAV;AAA+B,cAAQ;AAAvC,KAA/R,CAAZ;AAA6V,eAAW,KAAxW;AAA+W,uBAAmB,YAAlY;AAAgZ,YAAQ;AAAxZ,GAA33K,EAAoyL;AAAE,eAAW,IAAb;AAAmB,uBAAmB,SAAtC;AAAiD,YAAQ;AAAzD,GAApyL,EAA22L;AAAE,iBAAa,KAAf;AAAsB,cAAU,CAAC;AAAE,iBAAW,IAAb;AAAmB,cAAQ,QAA3B;AAAqC,cAAQ;AAA7C,KAAD,EAA2D;AAAE,iBAAW,IAAb;AAAmB,cAAQ,aAA3B;AAA0C,cAAQ;AAAlD,KAA3D,EAA0H;AAAE,iBAAW,KAAb;AAAoB,cAAQ,SAA5B;AAAuC,cAAQ;AAA/C,KAA1H,CAAhC;AAAuN,YAAQ,eAA/N;AAAgP,YAAQ;AAAxP,GAA32L,EAA8mM;AAAE,iBAAa,KAAf;AAAsB,cAAU,CAAC;AAAE,iBAAW,IAAb;AAAmB,cAAQ,OAA3B;AAAoC,cAAQ;AAA5C,KAAD,EAA0D;AAAE,iBAAW,IAAb;AAAmB,cAAQ,KAA3B;AAAkC,cAAQ;AAA1C,KAA1D,EAAiH;AAAE,iBAAW,KAAb;AAAoB,cAAQ,SAA5B;AAAuC,cAAQ;AAA/C,KAAjH,CAAhC;AAA8M,YAAQ,UAAtN;AAAkO,YAAQ;AAA1O,GAA9mM,EAAm2M;AAAE,iBAAa,KAAf;AAAsB,cAAU,CAAC;AAAE,iBAAW,IAAb;AAAmB,cAAQ,aAA3B;AAA0C,cAAQ;AAAlD,KAAD,EAAgE;AAAE,iBAAW,KAAb;AAAoB,cAAQ,gBAA5B;AAA8C,cAAQ;AAAtD,KAAhE,CAAhC;AAAoK,YAAQ,eAA5K;AAA6L,YAAQ;AAArM,GAAn2M,EAAmjN;AAAE,iBAAa,KAAf;AAAsB,cAAU,CAAC;AAAE,iBAAW,IAAb;AAAmB,cAAQ,QAA3B;AAAqC,cAAQ;AAA7C,KAAD,EAA2D;AAAE,iBAAW,IAAb;AAAmB,cAAQ,UAA3B;AAAuC,cAAQ;AAA/C,KAA3D,EAAuH;AAAE,iBAAW,KAAb;AAAoB,cAAQ,SAA5B;AAAuC,cAAQ;AAA/C,KAAvH,CAAhC;AAAoN,YAAQ,UAA5N;AAAwO,YAAQ;AAAhP,GAAnjN,CAAhB;;AAGA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,UAAMC,KAAK,GAAG9C,GAAG,CAACD,WAAW,EAAZ,CAAjB;AACAD,IAAAA,GAAG,CAACG,KAAK,CAAC6C,KAAD,EAAS,SAAT,CAAN,CAAH,CAA6BC,IAA7B,CAAmCC,QAAD,IAAc;AAC5C,UAAIA,QAAQ,CAACC,MAAT,EAAJ,EAAuB;AACnB,YAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYJ,QAAQ,CAACK,GAAT,EAAZ,CAAb;AACA,YAAIC,UAAU,GAAG,EAAjB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAAM,CAACM,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpCD,UAAAA,UAAU,CAACG,IAAX,CAAgBT,QAAQ,CAACK,GAAT,GAAeH,MAAM,CAACK,CAAD,CAArB,CAAhB;AACH;;AACDlB,QAAAA,YAAY,CAACiB,UAAD,CAAZ;AACH,OAPD,MAOO;AACHI,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AAEJ,KAZD,EAYGC,KAZH,CAYUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACH,KAdD;AAeH,GAjBD;;AAoBAC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,EAAhB,CAAmB,cAAnB,EAAmC,gBAAgBC,OAAhB,EAAyB;AACxDC,IAAAA,kBAAkB;AACrB,GAFD;;AAKA,QAAMA,kBAAkB,GAAG,YAAY;AACnC,QAAI,OAAOJ,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AACxC,YAAMI,QAAQ,GAAG,MAAML,MAAM,CAACC,QAAP,CAAgBK,OAAhB,CAAwB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAxB,CAAvB;;AACA,UAAIF,QAAQ,CAAC,CAAD,CAAZ,EAAiB;AAEb;AACA,cAAMG,QAAQ,GAAG,IAAI3D,MAAM,CAAC4D,SAAP,CAAiBC,YAArB,CAAkCV,MAAM,CAACC,QAAzC,CAAjB;;AACA,YAAGO,QAAQ,CAACA,QAAT,CAAkBL,OAAlB,IAA6B,SAAhC,EACA;AACItB,UAAAA,YAAY,CAAC,cAAD,CAAZ;AACH,SAHD,MAIK,IAAG2B,QAAQ,CAACA,QAAT,CAAkBL,OAAlB,IAA6B,MAAhC,EACL;AACItB,UAAAA,YAAY,CAAC,SAAD,CAAZ;AACH,SAHI,MAID;AACAA,UAAAA,YAAY,CAAC,uBAAD,CAAZ;AACH;;AACD,cAAM8B,QAAQ,GAAG,IAAI9D,MAAM,CAAC+D,QAAX,CAAoB,4CAApB,EAAkE9B,OAAlE,EAA2E0B,QAA3E,CAAjB;;AACA,YAAG;AAGH,gBAAMK,YAAY,GAAG,MAAMF,QAAQ,CAACG,SAAT,CAAmBT,QAAQ,CAAC,CAAD,CAA3B,CAA3B;AACAT,UAAAA,OAAO,CAACC,GAAR,CAAYgB,YAAZ;AAEA,gBAAME,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAxB;AACArC,UAAAA,iBAAiB,CAACoC,SAAD,CAAjB;AACAtC,UAAAA,mBAAmB,CAACnB,UAAU,CAACT,MAAM,CAACoE,KAAP,CAAaC,WAAb,CAAyBL,YAAzB,CAAD,CAAV,CAAmDM,OAAnD,CAA2D,CAA3D,CAAD,CAAnB;AACAnB,UAAAA,MAAM,CAACoB,QAAP,GAAkB,IAAlB;AACC,SAVD,CAWA,OAAMC,CAAN,EACA;AACI1C,UAAAA,iBAAiB,CAAC,4BAAD,CAAjB;AACAF,UAAAA,mBAAmB,CAAC,4BAAD,CAAnB;AACH;AACJ;AACJ,KAnCD,MAoCK;AACDxB,MAAAA,IAAI,CAACqE,IAAL,CAAU;AACNC,QAAAA,KAAK,EAAE,oEADD;AAENC,QAAAA,IAAI,EAAE,wBAFA;AAGNC,QAAAA,IAAI,EAAE,yEAHA;AAINC,QAAAA,IAAI,EAAE,OAJA;AAKNC,QAAAA,gBAAgB,EAAE,IALZ;AAMNC,QAAAA,iBAAiB,EAAE,SANb;AAONC,QAAAA,gBAAgB,EAAE;AAPZ,OAAV,EAQG5C,IARH,CAQS6C,MAAD,IAAY;AAChB,YAAIA,MAAM,CAACC,WAAX,EAAwB,CAEvB,CAFD,MAGK;AACD1E,UAAAA,QAAQ,CAAC,GAAD,EAAM;AAAE2E,YAAAA,OAAO,EAAE;AAAX,WAAN,CAAR;AACH;AACJ,OAfD;AAgBH;AAGJ,GAzDD;;AA+DAzF,EAAAA,SAAS,CAAC,MAAM;AACZ6D,IAAAA,kBAAkB;AAClBrB,IAAAA,iBAAiB;AACpB,GAHQ,EAGN,EAHM,CAAT;AAMA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,UAAU,EAAE3B,KAAK,CAAC6E,OAA9B;AAAuC,MAAA,MAAM,EAAE7E,KAAK,CAAC8E,MAArD;AAA6D,MAAA,OAAO,EAAE9E,KAAK,CAAC+E,OAA5E;AAAqF,MAAA,WAAW,EAAE;AAAlG;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,cADJ,eACU;AAAA;AAAA;AAAA;AAAA,cADV,eAEI;AAAA,+BAAQ;AAAA,mCAAevD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,+BAAQ;AAAA,sCAAkBF,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,+BAAQ;AAAA,0CAAsBF,gBAAtB,oBAAwC;AAAK,YAAA,GAAG,EAAExB,IAAV;AAAgB,YAAA,GAAG,EAAC,EAApB;AAAuB,YAAA,MAAM,EAAE,MAA/B;AAAuC,YAAA,KAAK,EAAE;AAAEmB,cAAAA,YAAY,EAAE;AAAhB;AAA9C;AAAA;AAAA;AAAA;AAAA,kBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,cALJ,eAKU;AAAA;AAAA;AAAA;AAAA,cALV,eAMI,QAAC,SAAD;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,EAAE,EAAE,CAAhB;AAAmB,UAAA,SAAS,EAAC,KAA7B;AAAA,oBACKG,UAAU,CAAC8D,GAAX,CAAe,CAACC,EAAD,EAAKC,KAAL,kBACZ;AAAA,mCACI,QAAC,GAAD;AAAA,qCACI,QAAC,IAAD;AAAA,wCACI,QAAC,IAAD,CAAM,GAAN;AAAU,kBAAA,OAAO,EAAC,KAAlB;AAAwB,kBAAA,GAAG,EAAED,EAAE,CAACE,UAAhC;AAA4C,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,MAAM,EAAE;AAAV;AAAnD;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA,2CAAY;AAAA,gCAAIH,EAAE,CAACI;AAAP;AAAA;AAAA;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACKJ,EAAE,CAACK;AADR;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAKI;AAAA;AAAA;AAAA;AAAA,0BALJ,eAMI;AAAA,2CAAaL,EAAE,CAACM,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ,eAOI;AAAA,iDAAmBN,EAAE,CAACO,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPJ,eAQI;AAAA,kDAAoBP,EAAE,CAACQ,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,0BARJ,eASI;AAAA,2CAAaR,EAAE,CAACS,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,0BATJ,eAUI;AAAA,0DAAc,QAAC,kBAAD;AAAoB,sBAAA,WAAW,EAAET,EAAE,CAACU;AAApC;AAAA;AAAA;AAAA;AAAA,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVJ,eAWI;AAAA,kEAAsB;AAAA,iCAAIV,EAAE,CAACW,eAAP;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAtB,OAAoDX,EAAE,CAACY,SAAvD,oBAAkE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,4BAAlE;AAAA;AAAA;AAAA;AAAA;AAAA,0BAXJ,eAYI;AAAA;AAAA;AAAA;AAAA,0BAZJ,eAaI,QAAC,aAAD;AAAe,oBAAA,OAAO,EAAEzE,gBAAxB;AAA0C,oBAAA,QAAQ,EAAE6D,EAAE,CAACW,eAAvD;AAAwE,oBAAA,MAAM,EAAEX;AAAhF;AAAA;AAAA;AAAA;AAAA,0BAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,2BADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAsCI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAtCJ;AAAA,kBADJ;AA0CH,CApJD;;IAAMhE,M;UACatC,W;;;MADbsC,M;AAuJN,eAAeA,MAAf","sourcesContent":["import Footer from './Footer'\nimport \"../material/Event.css\"\nimport NavbarHome from './NavbarHome'\nimport { useNavigate } from 'react-router-dom';\nimport { get, getDatabase, ref, child } from \"firebase/database\";\nimport { auth, db } from \"./Firebase\";\nimport { useState, useEffect } from 'react';\nimport { Card, Button, Row, Col, Container } from 'react-bootstrap';\nimport { ethers } from \"ethers\";\nimport polygonlogo from \"../material/polygon_logo.svg\"\nimport solanalogo from \"../material/solana_logo.svg\"\nimport dint from \"../material/dintcoin_logo.png\"\nconst Swal = require('sweetalert2');\n\n\nconst ShowTicketBtn = (props) => {\n    let navigate = useNavigate();\n    if (parseFloat(props.balance) > parseFloat(props.required)) {\n        return (\n            <>\n                <Button variant=\"primary\" onClick={() => navigate('/ticketcreate', { state: { eventid: props.detail.eventId, userid: auth.currentUser.uid } })}>Get Ticket</Button>\n            </>)\n    }\n    else {\n        return (\n            <>\n                <Button variant=\"primary\" onClick={() => alert('Buy Clicked')}>Buy Token</Button>\n            </>)\n    }\n}\n\nconst DisplaynetworkLogo = (props) => {\n    if (props.networkName == \"Polygon\") {\n        return (<>\n            <img src={polygonlogo} alt=\"\" height={\"17px\"} style={{ marginBottom: \"2px\" }} />\n        </>)\n    }\n    else if (props.networkName == \"Solana\") {\n        return (<>\n            <img src={solanalogo} alt=\"\" height={\"17px\"} style={{ marginBottom: \"2px\" }} />\n        </>)\n    } else {\n        return (<>\n            <p>token</p>\n        </>)\n    }\n}\n\nconst DisplaycryptoLogo = (props) => {\n    return (<>\n        <img src={dint} alt=\"\" height={\"22px\"} style={{ marginBottom: \"2px\" }} />\n    </>)\n}\n\n\n\nconst Events = (props) => {\n    let navigate = useNavigate();\n\n    const [eventsdata, setEventdata] = useState([])\n    const [userBalanceEvent, setUserBalanceEvent] = useState('wallet not connected')\n    const [tokenNameEvent, setTokenNameEvent] = useState('wallet not connected')\n    const [networkid, setnetworkid] = useState('wallet not connected')\n\n\n    const abicode = [{ \"constant\": true, \"inputs\": [], \"name\": \"name\", \"outputs\": [{ \"name\": \"\", \"type\": \"string\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_spender\", \"type\": \"address\" }, { \"name\": \"_amount\", \"type\": \"uint256\" }], \"name\": \"approve\", \"outputs\": [{ \"name\": \"success\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"creationBlock\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_from\", \"type\": \"address\" }, { \"name\": \"_to\", \"type\": \"address\" }, { \"name\": \"_amount\", \"type\": \"uint256\" }], \"name\": \"transferFrom\", \"outputs\": [{ \"name\": \"success\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint8\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_newController\", \"type\": \"address\" }], \"name\": \"changeController\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"name\": \"_owner\", \"type\": \"address\" }, { \"name\": \"_blockNumber\", \"type\": \"uint256\" }], \"name\": \"balanceOfAt\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"version\", \"outputs\": [{ \"name\": \"\", \"type\": \"string\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_cloneTokenName\", \"type\": \"string\" }, { \"name\": \"_cloneDecimalUnits\", \"type\": \"uint8\" }, { \"name\": \"_cloneTokenSymbol\", \"type\": \"string\" }, { \"name\": \"_snapshotBlock\", \"type\": \"uint256\" }, { \"name\": \"_transfersEnabled\", \"type\": \"bool\" }], \"name\": \"createCloneToken\", \"outputs\": [{ \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"name\": \"_owner\", \"type\": \"address\" }], \"name\": \"balanceOf\", \"outputs\": [{ \"name\": \"balance\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"parentToken\", \"outputs\": [{ \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_owner\", \"type\": \"address\" }, { \"name\": \"_amount\", \"type\": \"uint256\" }], \"name\": \"generateTokens\", \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{ \"name\": \"\", \"type\": \"string\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"name\": \"_blockNumber\", \"type\": \"uint256\" }], \"name\": \"totalSupplyAt\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_to\", \"type\": \"address\" }, { \"name\": \"_amount\", \"type\": \"uint256\" }], \"name\": \"transfer\", \"outputs\": [{ \"name\": \"success\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"transfersEnabled\", \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"parentSnapShotBlock\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_spender\", \"type\": \"address\" }, { \"name\": \"_amount\", \"type\": \"uint256\" }, { \"name\": \"_extraData\", \"type\": \"bytes\" }], \"name\": \"approveAndCall\", \"outputs\": [{ \"name\": \"success\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_owner\", \"type\": \"address\" }, { \"name\": \"_amount\", \"type\": \"uint256\" }], \"name\": \"destroyTokens\", \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"name\": \"_owner\", \"type\": \"address\" }, { \"name\": \"_spender\", \"type\": \"address\" }], \"name\": \"allowance\", \"outputs\": [{ \"name\": \"remaining\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_token\", \"type\": \"address\" }], \"name\": \"claimTokens\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"tokenFactory\", \"outputs\": [{ \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_transfersEnabled\", \"type\": \"bool\" }], \"name\": \"enableTransfers\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"controller\", \"outputs\": [{ \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"name\": \"_tokenFactory\", \"type\": \"address\" }, { \"name\": \"_parentToken\", \"type\": \"address\" }, { \"name\": \"_parentSnapShotBlock\", \"type\": \"uint256\" }, { \"name\": \"_tokenName\", \"type\": \"string\" }, { \"name\": \"_decimalUnits\", \"type\": \"uint8\" }, { \"name\": \"_tokenSymbol\", \"type\": \"string\" }, { \"name\": \"_transfersEnabled\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"fallback\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"name\": \"_token\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"_controller\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"_amount\", \"type\": \"uint256\" }], \"name\": \"ClaimedTokens\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"name\": \"_from\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"_to\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"_amount\", \"type\": \"uint256\" }], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"name\": \"_cloneToken\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"_snapshotBlock\", \"type\": \"uint256\" }], \"name\": \"NewCloneToken\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"name\": \"_owner\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"_spender\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"_amount\", \"type\": \"uint256\" }], \"name\": \"Approval\", \"type\": \"event\" }]\n\n\n    const getEventsfirebase = () => {\n        const dbRef = ref(getDatabase());\n        get(child(dbRef, `events/`)).then((snapshot) => {\n            if (snapshot.exists()) {\n                var events = Object.keys(snapshot.val())\n                var eventarray = [];\n                for (var i = 0; i < events.length; i++) {\n                    eventarray.push(snapshot.val()[events[i]])\n                }\n                setEventdata(eventarray)\n            } else {\n                console.log(\"No data available\");\n            }\n\n        }).catch((error) => {\n            console.error(error);\n        });\n    }\n\n\n    window.ethereum.on('chainChanged', async function (chainId) {\n        getmetamaskBalance()\n    })\n\n\n    const getmetamaskBalance = async () => {\n        if (typeof window.ethereum !== 'undefined') {\n            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n            if (accounts[0]) {\n                \n                // const provider = new ethers.providers.JsonRpcProvider('https://polygon-rpc.com/')\n                const provider = new ethers.providers.Web3Provider(window.ethereum)\n                if(provider.provider.chainId == \"0x13881\")\n                {\n                    setnetworkid(\"Polygon Test\" )\n                }\n                else if(provider.provider.chainId == \"0x89\")\n                {\n                    setnetworkid('Polygon')\n                }\n                else{\n                    setnetworkid('polygon not connected')\n                }\n                const contract = new ethers.Contract(\"0x40763df31955cb3bad544cbed3e1953a9b063311\", abicode, provider)\n                try{\n\n    \n                const balanceInEth = await contract.balanceOf(accounts[0]);\n                console.log(balanceInEth)\n\n                const tokenname = await contract.name();\n                setTokenNameEvent(tokenname)\n                setUserBalanceEvent(parseFloat(ethers.utils.formatEther(balanceInEth)).toFixed(6))\n                window.isWallet = true;\n                }\n                catch(e)\n                {\n                    setTokenNameEvent('polygon Main not connected')\n                    setUserBalanceEvent('polygon Main not connected')\n                }\n            }\n        }\n        else {\n            Swal.fire({\n                title: 'It will required a web3 wallet to use this area of our application',\n                text: \"Click Here to Install \",\n                html: '<a href=\"https://metamask.io\" target=\"_blank\">Click here to install</a>',\n                icon: 'error',\n                showCancelButton: true,\n                cancelButtonColor: '#CBC9C9',\n                cancelButtonText: 'Back'\n            }).then((result) => {\n                if (result.isConfirmed) {\n\n                }\n                else {\n                    navigate('/', { replace: true })\n                }\n            })\n        }\n\n\n    }\n\n  \n\n\n\n    useEffect(() => {\n        getmetamaskBalance()\n        getEventsfirebase()\n    }, [])\n\n\n    return (\n        <>\n            <NavbarHome isloggedin={props.islogin} logout={props.logout} isadmin={props.isAdmin} iseventpage={true} />\n            <div id=\"events\">\n                <br /><br />\n                <center><h4>Network : {networkid}</h4></center>\n                <center><h4>Token Name : {tokenNameEvent}</h4></center>\n                <center><h4>Wallet Balance : {userBalanceEvent} <img src={dint} alt=\"\" height={\"22px\"} style={{ marginBottom: \"2px\" }} /> </h4></center>\n                <br /><br />\n                <Container>\n                    <Row xs={1} md={3} className=\"g-4\">\n                        {eventsdata.map((ev, index) => (\n                            <>\n                                <Col>\n                                    <Card>\n                                        <Card.Img variant=\"top\" src={ev.eventPhoto} style={{ height: '200px' }} />\n                                        <Card.Body>\n                                            <Card.Title><b>{ev.eventName}</b></Card.Title>\n                                            <Card.Text>\n                                                {ev.eventDescription}\n                                            </Card.Text>\n                                            <hr></hr>\n                                            <h6>Date  : {ev.eventDate} </h6>\n                                            <h6>Start Time  : {ev.eventStartTime} </h6>\n                                            <h6>End Time    :  {ev.eventEndTime} </h6>\n                                            <h6>Vanue : {ev.venueName} </h6>\n                                            <h6>Network : <DisplaynetworkLogo networkName={ev.network} />  </h6>\n                                            <h6>Required Balance: <b>{ev.balanceRequired} </b> {ev.tokenName} <DisplaycryptoLogo /> </h6>\n                                            <br />\n                                            <ShowTicketBtn balance={userBalanceEvent} required={ev.balanceRequired} detail={ev} />\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            </>\n                        ))\n                        }\n                    </Row>\n                </Container>\n            </div>\n            <Footer />\n        </>\n    )\n}\n\n\nexport default Events;"]},"metadata":{},"sourceType":"module"}