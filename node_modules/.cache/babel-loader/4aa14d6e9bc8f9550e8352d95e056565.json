{"ast":null,"code":"var _jsxFileName = \"/Users/maxp/Documents/GitHub/dint_marketplace/src/frontend/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport { getAuth, signInWithEmailAndPassword, setPersistence, browserSessionPersistence, sendPasswordResetEmail, signInWithPopup, GoogleAuthProvider, FacebookAuthProvider, OAuthProvider } from \"firebase/auth\";\nimport { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { get, child, ref } from \"firebase/database\";\nimport $ from 'jquery';\nimport Footer from './Footer';\nimport NavbarHome from './NavbarHome';\nimport { auth, db } from './Firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  var previousPage = window.location.pathname.split('/');\n  let navigate = useNavigate();\n  const [error_msg_login, setLoginErr] = useState('');\n\n  const loginClicked = () => {\n    var login_email = $('#login_email').val();\n    var login_password = $('#login_password').val();\n    setPersistence(auth, browserSessionPersistence).then(() => {\n      signInWithEmailAndPassword(auth, login_email, login_password).then(userCredential => {\n        // sessionStorage.setItem('logged', true);\n        // sessionStorage.setItem('user_email', login_email);\n        props.loginStateChange();\n        props.setemail(login_email); // for get role of loggedin user\n\n        get(child(ref(db), `users/${userCredential.user.uid}/role`)).then(snapshot => {\n          // sessionStorage.setItem('role',snapshot.val())\n          if (snapshot.val() == 'admin') {\n            props.isadmin();\n          }\n        }).catch(e => {\n          alert(e);\n          console.log(e);\n        });\n\n        if (previousPage[2] == \"undefined\") {\n          navigate(\"/\");\n        } else {\n          navigate(\"/\" + previousPage[2]);\n        }\n      }).catch(error => {\n        switch (error.code) {\n          case 'auth/user-not-found':\n            console.log(`User is Not Found`);\n            setLoginErr('User Not Found');\n            break;\n\n          case 'auth/wrong-password':\n            console.log(`Wrong Password`);\n            setLoginErr(\"Wrong Password\");\n            break;\n\n          default:\n            console.log(error.message);\n            setLoginErr('Something Went Wrong');\n            break;\n        }\n      });\n    }).catch(e => {\n      alert(e.message);\n    });\n  };\n\n  const forgotPassClicked = () => {\n    var login_email = $('#login_email').val();\n\n    if (login_email !== \"\") {\n      const auth = getAuth();\n      sendPasswordResetEmail(auth, login_email).then(() => {\n        alert('Email Sent');\n      }).catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(errorMessage); // ..\n      });\n    } else {\n      alert('Email is empty');\n    }\n  };\n\n  const googleSignin = () => {\n    const auth = getAuth();\n    const provider = new GoogleAuthProvider();\n    setPersistence(auth, browserSessionPersistence).then(() => {\n      signInWithPopup(auth, provider).then(result => {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n        const token = credential.accessToken; // The signed-in user info.\n\n        const user = result.user;\n        props.loginStateChange();\n        props.setemail(user.email); // sessionStorage.setItem('logged', true);\n        // sessionStorage.setItem('user_email', user.email);\n\n        navigate(\"/\" + previousPage[2]);\n      }).catch(error => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        const email = error.customData.email;\n        const credential = GoogleAuthProvider.credentialFromError(error);\n        alert.log(errorMessage);\n      });\n    }).catch(e => {\n      alert(e);\n    });\n  };\n\n  const fbSignin = () => {\n    const provider = new FacebookAuthProvider();\n    signInWithPopup(auth, provider).then(result => {\n      // The signed-in user info.\n      const user = result.user;\n      console.log(user);\n      props.loginStateChange();\n      props.setemail(user.email); // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n\n      const credential = FacebookAuthProvider.credentialFromResult(result);\n      const accessToken = credential.accessToken; // ...\n    }).catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message; // The email of the user's account used.\n\n      const email = error.customData.email; // The AuthCredential type that was used.\n\n      const credential = FacebookAuthProvider.credentialFromError(error); // ...\n    });\n  };\n\n  const appleSignin = () => {\n    const provider = new OAuthProvider('apple.com');\n    signInWithPopup(auth, provider).then(result => {\n      // The signed-in user info.\n      const user = result.user;\n      console.log(user);\n      props.loginStateChange();\n      props.setemail(user.email); // Apple credential\n\n      const credential = OAuthProvider.credentialFromResult(result);\n      const accessToken = credential.accessToken;\n      const idToken = credential.idToken; // ...\n    }).catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message; // The email of the user's account used.\n\n      const email = error.customData.email; // The credential that was used.\n\n      const credential = OAuthProvider.credentialFromError(error); // ...\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarHome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login_divs\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: props.islogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            id: \"login_email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            id: \"login_password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"forgotpassBtn\",\n            onClick: forgotPassClicked,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"forgotPassText\",\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 81\n            }, this), \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error_signup\",\n          children: error_msg_login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"signup_btn\",\n          onClick: loginClicked,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"signup_line\",\n          children: [\"  Not registered Yet? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"signup_here\",\n              children: \" Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 83\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 63\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: googleSignin,\n            className: \"authbtnsocial\",\n            style: {\n              backgroundColor: 'red'\n            },\n            children: \"Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"kLDU/7NAErx4G99psyC07T6bXWY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/maxp/Documents/GitHub/dint_marketplace/src/frontend/components/Login.js"],"names":["getAuth","signInWithEmailAndPassword","setPersistence","browserSessionPersistence","sendPasswordResetEmail","signInWithPopup","GoogleAuthProvider","FacebookAuthProvider","OAuthProvider","useState","useNavigate","Link","get","child","ref","$","Footer","NavbarHome","auth","db","Login","props","previousPage","window","location","pathname","split","navigate","error_msg_login","setLoginErr","loginClicked","login_email","val","login_password","then","userCredential","loginStateChange","setemail","user","uid","snapshot","isadmin","catch","e","alert","console","log","error","code","message","forgotPassClicked","errorCode","errorMessage","googleSignin","provider","result","credential","credentialFromResult","token","accessToken","email","customData","credentialFromError","fbSignin","appleSignin","idToken","islogin","backgroundColor"],"mappings":"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","sourcesContent":["import { getAuth, signInWithEmailAndPassword, setPersistence, browserSessionPersistence, sendPasswordResetEmail, signInWithPopup, GoogleAuthProvider, FacebookAuthProvider, OAuthProvider } from \"firebase/auth\";\nimport { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { get, child, ref } from \"firebase/database\";\nimport $ from 'jquery';\nimport Footer from './Footer'\nimport NavbarHome from './NavbarHome';\nimport { auth, db } from './Firebase'\n\n\nconst Login = (props) => {\n\n    var previousPage = window.location.pathname.split('/');\n\n    let navigate = useNavigate();\n\n    const [error_msg_login, setLoginErr] = useState('')\n\n    const loginClicked = () => {\n        var login_email = $('#login_email').val();\n        var login_password = $('#login_password').val();\n\n        setPersistence(auth, browserSessionPersistence).then(() => {\n            signInWithEmailAndPassword(auth, login_email, login_password)\n                .then((userCredential) => {\n\n                    \n                    // sessionStorage.setItem('logged', true);\n                    // sessionStorage.setItem('user_email', login_email);\n\n                    props.loginStateChange()\n                    props.setemail(login_email)\n\n                    // for get role of loggedin user\n                    get(child(ref(db), `users/${userCredential.user.uid}/role`)).then((snapshot) => {\n                        // sessionStorage.setItem('role',snapshot.val())\n                        if (snapshot.val() == 'admin') {\n                            props.isadmin()\n                        }\n                    }).catch((e) => {\n                        alert(e)\n                        console.log(e)\n                    })\n\n                    if (previousPage[2] == \"undefined\") {\n                        navigate(\"/\")\n                    }\n                    else {\n                        navigate(\"/\" + previousPage[2])\n                    }\n                })\n                .catch((error) => {\n                    switch (error.code) {\n                        case 'auth/user-not-found':\n                            console.log(`User is Not Found`);\n                            setLoginErr('User Not Found')\n                            break;\n                        case 'auth/wrong-password':\n                            console.log(`Wrong Password`);\n                            setLoginErr(\"Wrong Password\")\n                            break;\n                        default:\n                            console.log(error.message);\n                            setLoginErr('Something Went Wrong')\n                            break;\n                    }\n                });\n        }).catch((e) => {\n            alert(e.message)\n        })\n    }\n\n\n\n    const forgotPassClicked = () => {\n        var login_email = $('#login_email').val();\n        if (login_email !== \"\") {\n            const auth = getAuth();\n            sendPasswordResetEmail(auth, login_email)\n                .then(() => {\n                    alert('Email Sent')\n                })\n                .catch((error) => {\n                    const errorCode = error.code;\n                    const errorMessage = error.message;\n                    console.log(errorMessage)\n                    // ..\n                });\n        }\n        else {\n            alert('Email is empty')\n        }\n\n    }\n    const googleSignin = () => {\n        const auth = getAuth();\n        const provider = new GoogleAuthProvider();\n        setPersistence(auth, browserSessionPersistence).then(() => {\n            signInWithPopup(auth, provider)\n                .then((result) => {\n                    // This gives you a Google Access Token. You can use it to access the Google API.\n                    const credential = GoogleAuthProvider.credentialFromResult(result);\n                    const token = credential.accessToken;\n                    // The signed-in user info.\n                    const user = result.user;\n                    props.loginStateChange()\n                    props.setemail(user.email)\n                    // sessionStorage.setItem('logged', true);\n                    // sessionStorage.setItem('user_email', user.email);\n                    navigate(\"/\" + previousPage[2])\n\n                }).catch((error) => {\n                    // Handle Errors here.\n                    const errorCode = error.code;\n                    const errorMessage = error.message;\n                    const email = error.customData.email;\n                    const credential = GoogleAuthProvider.credentialFromError(error);\n                    alert.log(errorMessage)\n\n                });\n        }).catch((e) => { alert(e) })\n    }\n    const fbSignin = () => {\n        const provider = new FacebookAuthProvider();\n        signInWithPopup(auth, provider)\n            .then((result) => {\n                // The signed-in user info.\n                const user = result.user;\n                console.log(user)\n                props.loginStateChange()\n                props.setemail(user.email)\n                // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n                const credential = FacebookAuthProvider.credentialFromResult(result);\n                const accessToken = credential.accessToken;\n\n                // ...\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                // The email of the user's account used.\n                const email = error.customData.email;\n                // The AuthCredential type that was used.\n                const credential = FacebookAuthProvider.credentialFromError(error);\n\n                // ...\n            });\n    }\n\n    const appleSignin = () => {\n        const provider = new OAuthProvider('apple.com');\n        signInWithPopup(auth, provider)\n            .then((result) => {\n                // The signed-in user info.\n                const user = result.user;\n\n                console.log(user)\n                props.loginStateChange()\n                props.setemail(user.email)\n                // Apple credential\n                const credential = OAuthProvider.credentialFromResult(result);\n                const accessToken = credential.accessToken;\n                const idToken = credential.idToken;\n\n                // ...\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                // The email of the user's account used.\n                const email = error.customData.email;\n                // The credential that was used.\n                const credential = OAuthProvider.credentialFromError(error);\n\n                // ...\n            });\n\n    }\n\n\n\n    return (\n        <>\n            <NavbarHome />\n          \n            <div className='login_divs'>\n                <div className=\"container\">\n                    <div className=\"header\">\n                        <h1>Login</h1>\n                        <h1>{props.islogin}</h1>\n                    </div>\n\n                    <div className=\"form-control\">\n                        <label htmlFor=\"username\">Email</label>\n                        <input type=\"email\" placeholder=\"Email\" id=\"login_email\" />\n                    </div>\n\n                    <div className=\"form-control\">\n                        <label htmlFor=\"username\">Password</label>\n                        <input type=\"password\" placeholder=\"Password\" id=\"login_password\" />\n                        <button id=\"forgotpassBtn\" onClick={forgotPassClicked}> <span id=\"forgotPassText\">Forgot Password?</span>  </button>\n                    </div>\n\n                    <p id='error_signup'>{error_msg_login}</p>\n                    <button id='signup_btn' onClick={loginClicked}>Submit</button>\n\n                    <p id=\"signup_line\">  Not registered Yet? <Link to=\"/signup\"> <span id='signup_here'> Sign Up</span></Link></p>\n                    <center>\n                       \n                        <button onClick={googleSignin} className=\"authbtnsocial\" style={{ backgroundColor: 'red' }}>Google</button>\n                      \n                    </center>\n                </div>\n            </div>\n            <Footer />\n        </>\n    )\n}\n\n\nexport default Login"]},"metadata":{},"sourceType":"module"}